# .github/workflows/deploy.yml

name: CI/CD - Despliegue en VPS

on:
  push:
    branches:
      - main  # La rama que activará el despliegue

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Clonar el repositorio
        uses: actions/checkout@v4

      - name: 2. Iniciar sesión en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: 2.5. Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 3. Construir y subir la imagen de Docker para mi servidor VPS 
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mpo:latest # Cambia 'mi-app-next'
          cache-from: type=gha
          cache-to: type=gha, mode=max


      - name: 4. Desplegar en el VPS 
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: | 
            cd /home/christian/projects/mpo/
            echo "arquitectura: $(uname -m)"
            docker pull --platform linux/arm64 ${{ secrets.DOCKERHUB_USERNAME }}/mpo:latest
            docker-compose down || true
            docker-compose up -d --remove-orphans force-recreate
            sleep 15
            docker-compose ps
            docker-compose logs --tail=20
            docker image prune -a -f
            echo "Despliegue completado exitosamente en el VPS"

